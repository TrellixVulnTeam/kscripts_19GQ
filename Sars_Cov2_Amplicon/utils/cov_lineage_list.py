#!/usr/bin/env python

##################################################################
# Example:
# python scripts/utils/cov_lineage_list.py \
#   scripts/libs/Cov_Lineage.txt \
#   lineage_report.csv \
#   lineage_report_trans.csv
##################################################################

import sys
import os
import re
from openpyxl import Workbook
import pdb


def printUsage():
    print("PROG <lineage_report>")
    sys.exit(1)

if len(sys.argv) != 2:
    print("Need 1 Argument!")
    printUsage()
elif not os.path.isfile(sys.argv[1]):
    print("Lineage Report (generated by pangolin) not exists!")
    printUsage()
else:
    lineage_report = sys.argv[1]
    # lineage_report_trans = sys.argv[3]
    lineage_report_trans = os.path.dirname(lineage_report) + os.sep + "lineage_report_trans.xlsx"
    lineage_report_trans_tab = os.path.dirname(lineage_report) + os.sep + "lineage_report_trans.xls"

# configure file position
program_dir         = sys.path[0]
who_name_cn_file    = os.path.split(program_dir)[0] + os.sep + "libs/WHOLabel_CN.txt"
cov_lineage_db      = os.path.split(program_dir)[0] + os.sep + "libs/Cov_Lineage.txt"
assert os.path.isfile(who_name_cn_file),    "ERROR - cov_lineage.py - WHO Label file not exists!"
assert os.path.isfile(cov_lineage_db),      "ERROR - cov_lineage.py - Cov Lineage DB file not exists!"

# [20220126 update] WHO Label CN
who_name_cn_dict = dict()
with open(who_name_cn_file) as fh:
    for line in fh:
        linelist = line.replace("\n", "").split("\t")
        who_name_cn_dict[linelist[0]] = linelist[1]

# main
#~ remain list
remain_list = ["Lineage",
                "Most common countries",
                "Earliest date",
                "Description"]
# IO
cov_lineage_dict = dict()
with open(cov_lineage_db, "rt") as fh:
    header = next(fh)
    header_list = header.strip().split("\t")
    header_enum = enumerate(header_list)
    header_dict = {enum[1]: enum[0] for enum in header_enum}
    for line in fh:
        linelist = line.strip().split("\t")
        lineage = linelist[header_dict["Lineage"]]
        outlist = [linelist[header_dict[rl]] for rl in remain_list]
        cov_lineage_dict[lineage] = outlist

# [20220214 update lanlei] .xlsx
wb = Workbook()
ws = wb.active
with open(lineage_report, "rt") as fh, \
    open(lineage_report_trans_tab, "wt", newline="", encoding="utf-8") as gh:
    #outheader = ["Sample", "WHO Label"] + remain_list
    outheader = ["样本名", "WHO命名", "Pangolin谱系", "最普遍国家", "最早发现日期", "描述"]
    gh.write("\t".join(outheader) + "\n")
    ws.append(outheader)
    header = next(fh)
    header_list = header.strip().split(",")
    header_enum = enumerate(header_list)
    header_dict = {enum[1]: enum[0] for enum in header_enum}
    for line in fh:
        #~ remove NC
        linelist        = line.strip().split(",")
        sample          = linelist[header_dict["taxon"]]
        who_name_tmp    = linelist[header_dict["scorpio_call"]]
        # probable omicron
        if " " in who_name_tmp:
            who_name_en  = who_name_tmp.replace("Probable ", "").strip().split(" ")[0]
            #` WHO Label CN
            if who_name_en in who_name_cn_dict:
                who_name = "{} ({})".format(who_name_en, who_name_cn_dict[who_name_en])
            else:
                who_name = who_name_en
        elif who_name_tmp == "":
            who_name = "-"
        else:
            who_name = who_name_tmp
        # remove reference NC_045512.2 | OM648778.1
        pattern = re.compile("^NC_|^OM", re.I)
        res = re.findall(pattern, sample)
        if len(res) != 0:
            continue
        lineage = linelist[header_dict["lineage"]]
        try:
            outlist = [sample, who_name] + cov_lineage_dict[lineage]
        except Exception:
            print(lineage + " not in cov_lineage_dict")
            outlist = [sample, who_name] + [lineage, "-", "-", "-"]
        ws.append(outlist)
        gh.write("\t".join(outlist) + "\n")
wb.save(lineage_report_trans)
